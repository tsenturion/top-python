import os

# üîí –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
IGNORED_DIRS = {'.git', '.vscode', '__pycache__'}
IGNORED_FILE_EXTENSIONS = {'.user'}

def show_directory_structure(root_path, indent=0):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤."""
    try:
        entries = os.listdir(root_path)
    except PermissionError:
        print(" " * indent + f"[–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞]: {root_path}")
        return
    except FileNotFoundError:
        print(" " * indent + f"[–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞]: {root_path}")
        return

    for entry in sorted(entries):
        full_path = os.path.join(root_path, entry)

        # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ –ø–∞–ø–∫–∏ –∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        if os.path.isdir(full_path):
            if entry.startswith('.') or entry in IGNORED_DIRS:
                continue
            print(" " * indent + f"[–ü–∞–ø–∫–∞] {entry}/")
            show_directory_structure(full_path, indent + 4)

        elif os.path.isfile(full_path):
            # –ü—Ä–æ–ø—É—Å–∫ —Å–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Ñ–∞–π–ª–æ–≤ —Å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
            _, ext = os.path.splitext(entry)
            if entry.startswith('.') or ext in IGNORED_FILE_EXTENSIONS:
                continue

            print(" " * indent + f"- {entry}")
            show_file_content(full_path, indent + 4)

def show_file_content(file_path, indent=0):
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —Å –æ—Ç—Å—Ç—É–ø–æ–º."""
    print(" " * indent + f"[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: {os.path.basename(file_path)}]")
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            for line in f:
                print(" " * indent + line.rstrip())
    except Exception as e:
        print(" " * indent + f"[–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}]")

if __name__ == "__main__":
    import sys

    if len(sys.argv) > 1:
        start_path = sys.argv[1]
    else:
        start_path = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ: ").strip()

    if not os.path.isdir(start_path):
        print(f"–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π: {start_path}")
    else:
        print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–∫–∏: {start_path}\n")
        show_directory_structure(start_path)
